#!/bin/bash
# Deploys app3 from version control, runs tests and if tests pass, runs new version of the app. If tests fail or any other error, sends email.

# Write some HTTP headers to make Nginx happy
echo -e "Content-type: text/html\n"

# Read env ($link https://stackoverflow.com/a/63902716/584750)
# shellcheck source=.env
source <(cat .env \
  | sed -E '/^\s*#.*/d' \
  | tr '\n' '\000' \
  | sed -z -E 's/^([^=]+)=(.*)/\1\x0\2/g' \
  | xargs -0 -n2 bash -c 'printf "export %s=%q;\n" "${@}"' /dev/null)

# Variables
DIRECTORY="$PWD/public"
VCS_URL=git@github.com:henno/foo.git
OUTPUT=''
PM2_APP_NAME=foo

log() {
	# Output immediately (for terminal and web)
	echo -e $1

	# Collect OUTPUT (for sending email later)
	OUTPUT+="$1"$'\n'
}

cmd() {
	log "Doing '$1'"

	# Run the command and capture its output and exit code
	COMMAND_OUTPUT=`$1 2>&1`
	COMMAND_EXIT_CODE=$?

	# Add command output to OUTPUT
	OUTPUT+=$COMMAND_OUTPUT$'\n'

	# Send the command output to stdout, too
	echo -e $COMMAND_OUTPUT$'\n'

	if [[ $COMMAND_EXIT_CODE -ne 0 ]]; then

		log "The previous command returned non-zero exit code. Aborting."

		# Send email to me
		mail -s 'message subject' -aFrom:app3@fadsghafdhdfhjnbb.club  henno.taht@gmail.com <<< $OUTPUT

		# Stop the script
		exit $?
	fi
}

log "Deploying $VCS_URL to $DIRECTORY"$'\n'

log "Shutting down running app"
cmd "pm2 stop $PM2_APP_NAME"

# Change potentially changed files (only tracked ones) back to the state they were originally in Github
cmd "git reset --hard"

# Pull the new commits from Github
cmd 'git pull'

# Delete old data from db
mongo localhost/foo <<< "db.dropDb()"

# Restore dump
cmd "tar -zxvf dump.tgz"
cmd "mongorestore -d $PM2_APP_NAME dump"

# Run tests
cmd 'npm run test'

# Re-run the app
cmd "pm2 start $PM2_APP_NAME"